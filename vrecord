#/bin/bash
middleoptions=""

usage(){
    echo
    echo "$(basename ${0}) ${version}"
    echo "$(basename "${0}") will record a file via the blackmagic sdk and bmdtools. It is an interactive script and will either create 8 or 10 bit uncompressed video."
    echo "Dependencies: ${dependencies[@]}"
    echo "Usage: $(basename $0) [ -h ]"
    echo "  -h ( display this help )"
    echo
    echo "Installation help:"
    echo "To install (on a mac) run these commands:"
    echo "brew update"
    echo "brew tap amiaopensource/amiaos"
    echo "brew install decklinksdk"
    echo "brew install libav"
    echo "git clone https://github.com/lu-zero/bmdtools.git"
    echo "cd bmdtools/"
    echo "make SDK_PATH=/usr/local/include SYS=Darwin"
    echo "cp -v -n bmdcapture bmdplay /usr/local/bin/"
    exit
}

# command-line options to set mediaid and original variables
OPTIND=1
while getopts "h" opt ; do
    case "${opt}" in
        h) usage ;;
        *) echo "bad option -$OPTARG" ; usage ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

echo -n "Enter Identifier: "
read id
echo -n "Enter Directory: "
read dir
if [ ! -d "$dir" ] ; then 
    echo "error not a valid directory"
    exit
fi
echo "Capture Options: "
echo "a) 10 bit with 2 channels in stereo and 2 channels in mono"
echo "b) 8 bit with 2 channels in stereo and 2 channels in mono"
echo "c) 10 bit with 2 channels in stereo" 
echo -n "enter your option: "
read captureopt
if [ "${captureopt}" = "a" ] ; then 
    bitdepth=10
    middleoptions+=(-c:v v210)
    middleoptions=(-metadata:s:v:0 encoder='Uncompressed 10-bit 4:2:2')
elif [ "${captureopt}" = "b" ] ; then
    bitdepth=8
    middleoptions=(-c:v rawvideo -pix_fmt uyvy422 -tag:v 2vuy)
    middleoptions=(-metadata:s:v:0 encoder='Uncompressed 8-bit 4:2:2')
elif [ "${captureopt}" = "c" ] ; then
    bitdepth=10
    middleoptions=(-c:v v210)
    middleoptions=(-metadata:s:v:0 encoder='Uncompressed 10-bit 4:2:2')
else 
    echo "error not a valid option"
    exit
fi
echo "Video Input: "
echo "a) Composite"
echo "b) SDI"
echo -n "enter your option: "
read videochoice
if [ "${videochoice}" = "a" ] ; then 
    videoinput=1
    videoinputname=composite
elif [ "${videochoice}" = "b" ] ; then 
    videoinput=4
    videoinputname=SDI
else
    echo "error not a valid video input option"    
    exit
fi
echo "Audio Input Options: "
echo "a) Analog"
echo "b) SDI Embedded Audio"
echo -n "enter your option: "
read audiochoice
if [ "${audiochoice}" = "a" ] ; then 
    audioinput=1
elif [ "${audiochoice}" = "b" ] ; then 
    audioinput=2
else 
    echo "error not a valid video input option"
    exit
fi
echo
echo "The selected bitdepth is ${bitdepth} and the set video input is ${videoinputname} and will capture to ${dir}/${id}.mov"
echo Hit enter to start
read
echo "hit control-c to stop"
bmdcapture -m 0 -V "${videoinput}" -A "${audioinput}" -c 8 -s 32 -p "${bitdepth}" -F nut -f pipe:1 | ffmpeg -v verbose -i - ${middleoptions[@]} -c:a pcm_s24le -filter_complex "[0:v:0]setfield=bff,setsar=40/27,setdar=4/3[vid1];[0:a:0]channelsplit=channel_layout=4.0[a1][a2][a3][a4];[a1][a2]amerge,aformat=channel_layouts=stereo[stereo1];[a3][a4]amerge,aformat=channel_layouts=stereo[stereo2]" -map "[vid1]" -map "[stereo1]" -map "[stereo2]"  "${dir}/${id}.mov" -c copy -f nut - | ffplay -
